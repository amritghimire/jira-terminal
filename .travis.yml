language: rust
sudo: required
os:
- linux
- osx
- windows
rust:
- stable
services:
- docker
before_install:
- |-
    case $TRAVIS_OS_NAME in
      windows)
        [[ ! -f C:/tools/msys64/msys2_shell.cmd ]] && rm -rf C:/tools/msys64
        choco uninstall -y mingw
        choco upgrade --no-progress -y msys2
        export msys2='cmd //C RefreshEnv.cmd '
        export msys2+='& set MSYS=winsymlinks:nativestrict '
        export msys2+='& C:\\tools\\msys64\\msys2_shell.cmd -defterm -no-start'
        export mingw64="$msys2 -mingw64 -full-path -here -c "\"\$@"\" --"
        export msys2+=" -msys2 -c "\"\$@"\" --"
        $msys2 pacman --sync --noconfirm --needed mingw-w64-x86_64-toolchain
        ## Install more MSYS2 packages from https://packages.msys2.org/base here
        taskkill //IM gpg-agent.exe //F  # https://travis-ci.community/t/4967
        export PATH=/C/tools/msys64/mingw64/bin:$PATH
        export MAKE=mingw32-make  # so that Autotools can find it
        ;;
    esac

before_cache:
- |-
    case $TRAVIS_OS_NAME in
      windows)
        # https://unix.stackexchange.com/a/137322/107554
        $msys2 pacman --sync --clean --noconfirm
        ;;
    esac

cache:
    directories:
    - $HOME/AppData/Local/Temp/chocolatey
    - /C/tools/msys64
before_script:
  - rustup component add rustfmt
  - rustup component add clippy
script:
  # Require `cargo fmt` to have been run.
  - cargo fmt -- --check
  # Require clippy to pass without warnings. 
  - cargo clippy -- -D warnings
  # Build the code.
  - cargo build 
before_deploy: 
- |-
    case $TRAVIS_OS_NAME in 
      windows) cargo build --release; cp target/release/jira-terminal.exe ./ ;;
      *) ./build-release jira-terminal ${TRAVIS_TAG}-${TRAVIS_OS_NAME} ;;
    esac
deploy:
  provider: releases
  api_key: $GITHUB_TOKEN
  file_glob: true
  file: 
    - "jira-terminal-${TRAVIS_TAG}-${TRAVIS_OS_NAME}.*"
    - "jira-terminal"
    - "jira-terminal.exe"
  skip_cleanup: true
  on:
    rust: stable
    tags: true
